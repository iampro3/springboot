<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.springboot.dao.TodoDAO">
	
	<insert id="insertTodo" parameterType="TodoDTO">
	
		insert into tb_todo (
			todo_id,
			todo,
			due_date,
			user_id
		) values (
			seq_todo.nextval,
			#{todo},
			#{due_date},
			#{user_id}
		)
		
	</insert>
	<select id="totalCount" resultType="int">
		select count(*) from tb_todo
	</select>
	<select id="selectTodo" resultType="TodoDTO" parameterType="TodoDTO">

		SELECT *
		FROM  (
		   SELECT rownum AS rnum,
		          todo_id,
		          todo,
		          due_date,
		          done_date,
		          u.user_id,
		          u.name
		   FROM tb_todo t
		   LEFT OUTER JOIN tb_user u on(u.user_id = t.user_id)
		)
		WHERE rnum <![CDATA[ >= ]]> #{startNum}
		  AND rnum <![CDATA[ <= ]]> #{endNum}

	</select>
	
<!-- 	<select id="listWithDepthDao" resultType="com.study.springboot.dto.SimpleBbsDto"> -->
<!-- 		with td_recu (lv, TODO_ID, TODO, DUE_DATE, DONE_DATE, USER_ID, PARENT_ID) as ( -->
<!-- 		    select   -->
<!-- 		        1 as lv, -->
<!-- 		        TODO_ID, TODO, DUE_DATE, DONE_DATE, USER_ID, PARENT_ID -->
<!-- 		    from  -->
<!-- 		        tb_todo -->
<!-- 		    where  -->
<!-- 		        parent_id is null -->
		    
<!-- 		    union all -->
		        
<!-- 		    select -->
<!-- 		        t.lv + 1 as lv, -->
<!-- 		        td.TODO_ID,  -->
<!-- 		        lpad(' + ', t.lv ,' + ') || td.TODO,  -->
<!-- 		        td.DUE_DATE,  -->
<!-- 		        td.DONE_DATE, td.USER_ID, td.PARENT_ID -->
<!-- 		    from td_recu t -->
<!-- 		    left outer join tb_todo td on td.parent_id = t.TODO_ID -->
<!-- 		    where td.parent_id is not null -->
<!-- 		) -->
<!-- 		search depth first by (TODO_ID) set sort_TODO_ID -->
<!-- 		select * from td_recu -->
<!-- 		order by sort_TODO_ID -->
<!-- 	</select> -->
	
	<select id="detailTodo"
			parameterType="int" 
			resultType="TodoDTO">
		select 
			todo_id,
			todo,
			due_date,
			done_date,
			user_id
		from
			tb_todo
		where
			todo_id = #{todo_id}
	</select>
	
	<update id="updateTodo"
			parameterType="TodoDTO">
		/* toto.updateTodo */
		update tb_todo
		set 
			<if test="todo != null and due_date != null">
			    todo = #{todo},
			    due_date = #{due_date}
		    </if>
		    <if test="checked == true">
		    	done_date = sysdate
		    </if>
		    <!--
		    	글 수정할때도 checked는 false이므로
		    	글 수정할때는 제외하는 조건 추가 
		     -->
		    <if test="checked != true and (todo == null or due_date == null)">
		    	done_date = null
		    </if>
		    <!-- 
		    <choose>
		    	<when test="todo != null and due_date != null">
			    	todo = #{todo},
				    due_date = #{due_date}
		    	</when>
		    	<otherwise>
		    		done_date = sysdate
		    	</otherwise>
		    </choose>
		     -->
		where
		    todo_id = #{todo_id}
			
	</update>
	
	<delete id="deleteTodo"
			parameterType="TodoDTO">
		
		DELETE 
			tb_todo
		WHERE 
			todo_id = 1
			
	</delete>
</mapper>
