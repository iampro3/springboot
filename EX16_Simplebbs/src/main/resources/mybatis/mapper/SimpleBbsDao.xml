<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.springboot.dao.ISimpleBbsDao"> 
		
	<resultMap id="bbsResult" type="SimpleBbsDto">
		<result column="id" property="id" />
		<result column="writer" property="writer" />
	</resultMap>
		
	<select id="listDao2" resultMap="bbsResult">
		select * from simple_bbs
	</select>
	
	<select id="listDao" resultType="com.study.springboot.dto.SimpleBbsDto">
		select * from simple_bbs order by id desc
	</select>

	<select id="test_listDao" resultType="com.study.springboot.dto.SimpleBbsDto">
		select * 
		from 
			simple_bbs
		where 
			<![CDATA[id < 3]]>
		order by 
			id desc
	</select>
	

	<select id="viewDao" 
			resultType="com.study.springboot.dto.SimpleBbsDto"
			parameterType="string">
		select * from simple_bbs where id = #{param1} 
	</select>

	<insert id="writeDao">
		insert into simple_bbs (id, writer, title, content)
		values (simple_bbs_seq.nextval, #{param1}, #{param2}, #{param3})
	</insert>
	
	<!--	resultMap 사용방법
	<resultMap id="bbsResult" type="SimpleBbsDto">
		<result column="id" property="id" />
		<result column="writer" property="writer" />
	</resultMap>
		
	<select id="listDao2" resultMap="bbsResult">
		select * from simple_bbs 
	</select> -->
	
	
<!-- 	<delete id="deleteDao" parameterType="string"> parameter 사용할 때 가능 -->
		<delete id="deleteDao" parameterType="string">		
		DELETE FROM simple_bbs WHERE id = #{_parameter}
										  <!--#{_parameter} 가능 -->		
	</delete>
	
	<update id="updateDao" 
			parameterType="SimpleBbsDto"> 
		UPDATE 
				simple_bbs
		   SET 
				writer = #{writer},
				title = #{title},
				content = #{content}
		 WHERE 
<!-- 		 	<![CDATA[ id<3 ]]> 문자 그대로의 의미 -->
		 		id = #{id}
	</update>
	
	<select id="testIF" 
			parameterType="SimpleBbsDto" 
			resultType="SimpleBbsDto">
		select * 
		
		from 
			simple_bbs
<!-- 		where 
			1=1 -->
		<!-- <where>태그는 
				1. if조건이 없으면 where문 자체도 없다.
				2. if조건이 있으면 앞에 있는 and나  or를 삭제
				3. 1=1 안 써도 된다.
				-예시-
				<where>
					  title =#{title}
				  and writer =#{writer}
				 -->
		<where>
		<if test = "title != null and title !=''"> <!-- title이 없으면 null, title가 ''이 아니면 출력 title이 title인 title가 출력된다.-->
		 			 and title =#{title}
		</if>
		<if test = "writer != null and writer !=''">
		 			 and writer =#{writer}
 			<!--or writer =#{writer}	 작성자 또는 일 때 / ''으로 sql에서 사용하기 위해서 #{writer} 을 넣는다.--> 	
		</if>
<!-- 		<if test = "writer != null and writer !=''"> -->
<!-- 		  and writer =#{writer} =#{title} 			영상 보고 넣기	 -->
<!-- 		</if> -->
		</where>
		
<!-- 	<if test = "title != null and title !=''> 
 		where title =#{title} -->			
<!-- 			title = #{새글} -->
<!-- 			title = #{title} -->
		order by
			id desc
	</select>
	
<!-- 	choose 문 -->
	<select id="testChoose"
			parameterType="SimpleBbsDto" 
			resultType="SimpleBbsDto">
	
		select 
			* 
		
		from 
			simple_bbs
			<where>
				<choose>
					<when test="title != null and title !=''">	<!--when 여러개 사용할 수 있다.  -->
								and title =#{title}
						</when>	
					<otherwise>		<!-- else 개념이다. -->
								and title IS NULL
					</otherwise>
				</choose>
			</where>
	</select>
	
	
<!-- 	Foreach 문 -->
	<select id="testForeach"
		parameterType="SimpleBbsDto"
		resultType="SimpleBbsDto">
		
		SELECT 
			* 
		FROM 
			simple_bbs
		<where>
		<if test ="chk != null"></if>
			id in 
			<!-- collection="ids" index="idx" 는 삭제함 -->
			<foreach 
				item="value" 	
				collection="chk"	
				open="("
				separator=","				
				close=")">			<!-- open="(":시작할때, 조건문의 마지막에 넣어준다. -->
				
				#{value}
			</foreach>			
		</where>
	</select>
</mapper>


